#!/bin/bash

# Exit script on (almost) all errors
# instead of continuing silently
set -euo pipefail

# Print the usage instructions
function print_usage {
    echo "Usage: deploy_production [server] [username]"
    echo "Example: deploy_production 02 delft"
    exit 1
}

# Function that runs on the server
function update_code {
    cd www

    if [ -f artisan ]; then
        php artisan down
        php artisan clear-compiled
        php artisan cache:clear
        php artisan config:clear
        php artisan route:clear
        php artisan view:clear
    fi

    git pull --ff-only origin

    if [ -f composer.lock ]; then
        composer install --no-interaction --no-dev --prefer-dist --optimize-autoloader
    fi

    if [ -f artisan ]; then
        php artisan up
    fi

    exit
}

# Parse input parameters
if [ $# -lt 2 ]; then
    print_usage
    exit 1
fi

# Determine correct server address space (sc, sc-int, aws)
SERVER="$1"
USERNAME="$2"
SPACE="aws"
if [[ "$SERVER" -eq "01" || "$SERVER" -eq "02" ]]; then
    SPACE="sc"
fi

# Login to the server, copy all functions to it, and run the update function
ssh $USERNAME@in10-web-p$SERVER.$SPACE.nines.nl "$(typeset -f); update_code"

echo "Done"
