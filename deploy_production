#!/bin/bash

# Exit script on (almost) all errors
# instead of continuing silently
set -euo pipefail

# Print the usage instructions
function print_usage {
    echo "Usage: deploy_production [options] username"
    echo "Options:"
    echo " -v  Deploy over the VPN"
    echo " -s  Select server instance, valid choices are 01, 02 and 03. Default is 01."
    echo "Example: $ deploy_production -v -s 02 waterbusbe to deploy the username waterbusbe on server 2 over a VPN connection"
    exit 1
}

# Function that runs on the server
function update_code {
    cd www

    if [ -f artisan ]; then
        php artisan down
        php artisan clear-compiled
        php artisan cache:clear
        php artisan config:clear
        php artisan route:clear
        php artisan view:clear
    fi

    git checkout master
    git pull --ff-only origin master

    if [ -f composer.lock ]; then
        composer install --no-interaction --no-dev --prefer-dist --optimize-autoloader
    fi

    if [ -f artisan ]; then
        php artisan up
    fi

    exit
}

# Parse input parameters
USERNAME="${@: -1}"

# Check inputs: must pass at least one parameter
if [[ -z "$USERNAME" ]]; then
    print_usage
    exit 1
fi

# Parse options
SERVER="01"
VPN=0
while getopts "s:v" opt; do
    case $opt in
      s)
       SERVER="$OPTARG"
       ;;
      v)
       VPN=1
       ;;
    esac
done

# Validate server argument, must be 01, 02 or 03
match=0
servers=(01 02 03)
for s in "${servers[@]}"; do
    if [[ $s = "$SERVER" ]]; then
        match=1
        break
    fi
done
if [[ $match = 0 ]]; then
    echo "Unknown server, server must be 01, 02 or 03"
    exit 1
fi

# VPN and Server 03 are incompatible
if [[ "$VPN" = 1 ]] && [[ "$SERVER" = "03" ]]; then
    echo "Server 03 not reachable over the VPN, deploy manually"
    exit 2
fi

# Determine correct server address space (sc, sc-int, aws)
SPACE="sc"
if [[ "$VPN" = 1 ]]; then
    SPACE="sc-int"
fi
if [[ "$SERVER" -eq "03" ]]; then
    SPACE="aws"
fi

# Login to the server, copy all functions to it, and run the update function
ssh $USERNAME@in10-web-p$SERVER.$SPACE.nines.nl "$(typeset -f); update_code"

echo "Done"
